= Picker =

The Picker example demonstrates how to set element's value based on user actions.

== Design ==

The Picker example is a simple button, which changes its value based on the user's selection.

==== Picker help text: ====
Picker demonstrates the change of the value which is embedded into a button via a related selection list. Tapping the button opens the list. Selecting a value closes the list. People can cancel the selection by tapping the back button. 

[[Image(picker_button_page.png)]] [[Image(picker_list_page.png)]]

== Implementation ==

The example code snippet below defines the two simple pages, one with the button (which' content is set from the second page), and another page, which lists possible button values. Each list item is clickable and will call the setPickerValue() !JavaScript function.

Please note, that the horizontal aligning of the elements is usually done with tables in S40 Web Apps, as the CSS "float" style formatting isn't supported.

{{{
<!--Picker mini app-->
<div id="picker" class="slider_section hide">
	<div id="picker_content">
		<div id="picker_button_content" class="show">
			<div class="fill">
				<input type="button" id="picker_button"
				 class="button centered_button" value="Value is 1"
				 onclick="
					mwl.setGroupTarget('#picker_content', '#picker_list_content', 'show', 'hide');
					mwl.setGroupTarget('#navigateToggle', '#picker_backButton', 'show', 'hide');
				" />
			</div>
		</div>

		<div id="picker_list_content" class="hide">
			<div class="list_section_header">Picker</div>
			
			<div class="text_list_item"
			 onclick="setPickerValue(1);">Value is 1</div>
			<div class="text_list_item"
			 onclick="setPickerValue(2);">Value is 2</div>
			<div class="text_list_item"
			 onclick="setPickerValue(3);">Value is 3</div>
			<div class="text_list_item"
			 onclick="setPickerValue(4);">Value is 4</div>
			<div class="text_list_item"
			 onclick="setPickerValue(5);">Value is 5</div>
			<div class="text_list_item"
			 onclick="setPickerValue(6);">Value is 6</div>
		</div>
	</div>
</div>
<!--End Picker mini app-->
}}}

The !JavaScript function setPickerValue() is a simple method that finds the picker_button element id from within the DOM tree, and then switches the page back to button page with MWL functions.

{{{
function setPickerValue(newValue) {
	mwl.setGroupTarget('#picker_content', '#picker_button_content', 'show', 'hide');
	mwl.setGroupTarget('#navigateToggle', '#miniappGoHomeToggle', 'show', 'hide');
	document.getElementById("picker_button").value = "Value is " + newValue;
}
}}}


CSS style definitions:

{{{
.button {
	height: 40px;
	background-image: url('../img/button_background.png');
	color: #fff;
}

.centered_button {
	width: 80%;
	margin-left: 10%;
	margin-top: 10%
}

.list_section_header {
	background-color: #ced3c6;
	color: white;
	height: 20px;
	padding-left: 12px;
	font-size: 14px;
	font-weight: bold;
	line-height: 20px;
}

.text_list_item { 
	background-color: #fff;
	padding: 11px 8px 11px 8px;
	font-weight: bold;
	border-bottom: 1px #e7e7e7 solid;
	font-size: 16px;
}
}}}